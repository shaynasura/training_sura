---
title: "R Practice: Functions"
author: "Shayna Sura"
format: html
---

# Chapter 16

## 16.1 R Functions

## 16.1.1 - warm up

### Question 1: Create a function called double_it() that doubles any value input value. Then try out the function, are the values returned what you expect?

```{r}
double_it <- function(value){
  doubled_value <- value*2
  return(doubled_value)
}

double_it(c(3,6,9,8))
```

Yes, the returned values are what I expected from this function.



### Question 2: Write a function called exclaim_age() that returns the statement “I am ___ years old!”, where the blank is entered by the user as argument age. Then try out the function, are the values returned what you expect?

```{r}
exclaim_age <- function(age){
  print(paste("I am", age, "years old!"))
}

exclaim_age(34)
```



## 16.1.2 - functions with conditionals

### Question 3: Consider the function called find_max(): Talk to your neighbor about what this function does and what you expect the output would be. Run the function with some values. Is it running how you expect? Run the function again, but this time use the function in an arithmetic expression. Is the output what you expect?


```{r find_max() function}
# "find_max() function" #
find_max <- function(value_1, value_2) {
    
    if (value_1 > value_2) {
        return(value_1)
    }
    else if (value_2 > value_1) {
        return(value_2)
    }
}

find_max(45,99)
find_max(99,45)
5 + find_max(6,2)
5 + find_max(23, 99)
```

Yes, the function is returning the output that I expect, even when I use it in an arithmetic expression.


## 16.1.3 - adding Error or Warning messages


### Question 4a: Run find_max(4, 2, 5) in the Console. What happens? What kind of message appears? Is it sufficient? If not, consider adding a warning or error message using warning() or stop(). Remember, use ?function to access the Help page. Add additional logic to the function, as needed.

```{r}
find_max(4,2,5)
```

I got an error message for this saying there was an unused argument. Yes, I think this error message is sufficient for this test of this function.



### Question 4b: Run find_max(4, 4) in the Console. What happens? What kind of message appears? Is it sufficient? If not, consider adding a warning or error message using warning() or stop(). Remember, use ?function to access the Help page. Add additional logic to the function, as needed.
```{r}
find_max(4,4)
```

Nothing happened when I tried this - I didn't receive a warning or an error message. So, no, this is not sufficient.


```{r find_max_v2 and v3}
find_max_v2 <- function(value_1, value_2) {
    
    if (value_1 > value_2) {
        return(value_1)
    }
    else if (value_2 > value_1) {
        return(value_2)
    }
    else if(value_1 == value_2){
      warning("The two values entered are equal to each other.")
    }
}

find_max_v2(4,4)

## alternative way of doing this
# `find_max()` function with error message
find_max_v3 <- function(value_1, value_2) {
    
    if (value_1 == value_2) {
        stop("Values must be different from each other.")
    }
    
    if (value_1 > value_2) {
        return(value_1)
    }
    else if (value_2 > value_1) {
        return(value_2)
    }
}

find_max_v3(4,4)
```


### Question 4c: Run find_max(4, "cow") in the Console. What happens? What kind of message appears? Is it sufficient? If not, consider adding a warning or error message using warning() or stop(). Remember, use ?function to access the Help page. Add additional logic to the function, as needed.


```{r}
find_max_v2(4, "cow")
```

It told me the string "cow" was greater than the number entered. This is not a sufficient message.

```{r find_max_v4}

## alternative way of doing this
# `find_max()` function with error message
find_max_v4 <- function(value_1, value_2) {
    
    if (class(value_1) != "numeric" | class(value_2) != "numeric") {
        stop("Both values must be numeric.")
    }
    
    if (value_1 > value_2) {
        return(value_1)
    }
    else if (value_2 > value_1) {
        return(value_2)
    }
}

find_max_v4(4, "cow")

```


## 16.2 R Packages - not done in this file...



